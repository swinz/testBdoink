# name of your github action
name: CI

on:
  push:
    branches:
      - main
# this is where the magic happens, each job happens in parallel btw
jobs:
  build_on_mac:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
        working-directory: test-bdoink
    steps:
    - uses: actions/checkout@master
      with:
        ref: main
    - uses: actions/setup-node@master
      with:
        node-version: 12.14
    - name: see directory
      run: ls
    - name: install
      run: yarn install
    - name: build
      run: yarn electron:build --mac
    - name: see dist directory
      run: ls
      working-directory: test-bdoink/dist_electron
    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist-mac-dmg
        path: test-bdoink/dist_electron/*.dmg
        retention-days: 1



  build_on_win:
    runs-on: windows-2016
    defaults:
      run:
        shell: powershell
        working-directory: test-bdoink
    steps:
    - uses: actions/checkout@master
      with:
        ref: main
    - uses: actions/setup-node@master
      with:
        node-version: 12.14
    - name: see directory
      run: ls
    - name: install
      run: yarn install
    - name: build
      run: yarn electron:build --win
    - name: see dist directory
      run: ls
      working-directory: test-bdoink/dist_electron
    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist-win-exe
        path: test-bdoink/dist_electron/*.exe
        retention-days: 1


  build_on_linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: test-bdoink
    steps:
    - uses: actions/checkout@master
      with:
        ref: main
    - uses: actions/setup-node@master
      with:
        node-version: 12.14
    - name: see directory
      run: ls
    - name: install
      run: yarn install
    - name: build
      run: yarn electron:build --linux deb --x64 --armv7l --arm64
    - name: see dist directory
      run: ls
      working-directory: test-bdoink/dist_electron
    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist-linux-deb
        path: test-bdoink/dist_electron/*.deb
        retention-days: 1

  s3_artifact_deploy:
    runs-on: ubuntu-latest
    needs: [build_on_linux, build_on_mac, build_on_win]
    steps:
      - name: Create packages directory
        shell: bash
        run: |
          echo 'Package Dir Create'
          ls -R
          mkdir temppkg
      - id: download_linux
        uses: actions/download-artifact@v2
        with:
          name: dist-linux-deb
          path: temppkg
      - name: 'Echo download path'
        run: echo ${{steps.download_linux.outputs.download-path}}
      - id: download_win
        uses: actions/download-artifact@v2
        with:
          name: dist-win-exe
          path: temppkg
      - id: download_mac
        uses: actions/download-artifact@v2
        with:
          name: dist-mac-dmg
          path: temppkg
      - name: Display structure of downloaded files
        run: ls -R
      - name: Display package directory
        run: ls -latr temppkg

      - name: s3 artifact copy
        if: ${{ false }}
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.BDOINK_S3_BUILD_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          SOURCE_DIR: 'temppkg'
          DEST_DIR: 'artifacts/monarch-app/develop/test123'
